============================= test session starts ==============================
platform linux -- Python 3.9.5, pytest-6.2.4, py-1.10.0, pluggy-0.13.1
rootdir: /home/killua/Documents/Projects/tezos/prediction-market-contracts/wolfram-oracle
plugins: regtest-1.4.5, lazy-fixture-0.6.3, mock-3.6.1, timeout-1.4.2
collected 41 items

tests/test_account.py EE

==================================== ERRORS ====================================
_ ERROR at setup of test_user_is_imported_from_folder[rimk-tz1PMqV7qGgWMNH2HR9inWjSvf3NwtHg7Xg4] _

transaction = <pytezos.operation.group.OperationGroup object at 0x7febb67a8910>

Properties
.key		tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjc...pply()
.proposals()
.result()
.reveal()
.run()
.run_operation()
.seed_nonce_revelation()
.send()
.sign()
.transaction()
count = None, tries = 3, error_func = <function print_error at 0x7febb7170670>

    def submit_transaction(transaction, count=None, tries=3, error_func=None):
        """
        Submit a transaction
        """
        try:
            source = transaction.key.public_key_hash()
            transaction_ = transaction.autofill(ttl=56)
>           res = transaction_.sign().inject()

src/utils.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.operation.group.OperationGroup object at 0x7febb64a0880>

Properties
.key		tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjc...pply()
.proposals()
.result()
.reveal()
.run()
.run_operation()
.seed_nonce_revelation()
.send()
.sign()
.transaction()
check_result = True, num_blocks_wait = 5, time_between_blocks = None
min_confirmations = 0, kwargs = {}

    def inject(
        self,
        check_result: bool = True,
        num_blocks_wait: int = 5,
        time_between_blocks: Optional[int] = None,
        min_confirmations: int = 0,
        **kwargs
    ):
        """Inject the signed operation group.
    
        :param check_result: raise RpcError in case operation is applied but has runtime errors
        :param num_blocks_wait: number of blocks to wait for injection
        :param time_between_blocks: override the corresponding parameter from constants
        :param min_confirmations: number of block injections to wait for before returning
        :returns: operation group with metadata (raw RPC response)
        """
        self.context.reset()
    
>       opg_hash = self.shell.injection.operation.post(
            operation=self.binary_payload(),
            _async=False,
        )

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/operation/group.py:348: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.rpc.shell.OperationInjectionQuery object at 0x7febb64bb760>

Properties
.path	/injection/operation
.node	http...wering,set True if you don't want to.
:param chain: Optionally you can specify the chain
:returns: ID of the operation

operation = '2d018b48faba617ffb950f0eac7f96f7945e5234db041e630382714d4422da2a6c006b82198cb179e8306c1bedd08f12dc863f328886a428f803a...b0b47a7931321736623ed7d6a5fd96829e96761f06f3c04f91e84307086404866a66c4e08b257804096e4b3788a2d0c73430646c912c0e21464c0d'
_async = False, chain = None

    def post(self, operation, _async=False, chain=None):
        """ Inject an operation in node and broadcast it.
        The `signedOperationContents` should be constructed using a contextual RPCs from the latest block
        and signed by the client.
    
        :param operation: Hex-encoded operation data or bytes
        :param _async: By default, the RPC will wait for the operation to be (pre-)validated before answering, \
        set True if you don't want to.
        :param chain: Optionally you can specify the chain
        :returns: ID of the operation
        """
        if isinstance(operation, bytes):
            operation = operation.hex()
    
>       return self._post(
            params={
                'async': _async,
                'chain': chain
            },
            json=operation
        )

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/rpc/shell.py:276: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.rpc.shell.OperationInjectionQuery object at 0x7febb64bb760>

Properties
.path	/injection/operation
.node	http...wering,set True if you don't want to.
:param chain: Optionally you can specify the chain
:returns: ID of the operation

json = '2d018b48faba617ffb950f0eac7f96f7945e5234db041e630382714d4422da2a6c006b82198cb179e8306c1bedd08f12dc863f328886a428f803a...b0b47a7931321736623ed7d6a5fd96829e96761f06f3c04f91e84307086404866a66c4e08b257804096e4b3788a2d0c73430646c912c0e21464c0d'
params = {'async': False, 'chain': None}

    def _post(self, json=None, params=None):
>       return self.node.post(
            path=self.path,
            params=params,
            json=json
        )

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/rpc/query.py:132: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.rpc.node.RpcNode object at 0x7febb69a9c10>

Node address
http://localhost:20000
path = '/injection/operation', params = {'async': False, 'chain': None}
json = '2d018b48faba617ffb950f0eac7f96f7945e5234db041e630382714d4422da2a6c006b82198cb179e8306c1bedd08f12dc863f328886a428f803a...b0b47a7931321736623ed7d6a5fd96829e96761f06f3c04f91e84307086404866a66c4e08b257804096e4b3788a2d0c73430646c912c0e21464c0d'

    def post(self, path, params=None, json=None):
>       response = self.request('POST', path, params=params, json=json)

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/rpc/node.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.rpc.node.RpcNode object at 0x7febb69a9c10>

Node address
http://localhost:20000
method = 'POST', path = '/injection/operation'
kwargs = {'json': '2d018b48faba617ffb950f0eac7f96f7945e5234db041e630382714d4422da2a6c006b82198cb179e8306c1bedd08f12dc863f328886...c04f91e84307086404866a66c4e08b257804096e4b3788a2d0c73430646c912c0e21464c0d', 'params': {'async': False, 'chain': None}}
res = <Response [500]>

    def request(self, method, path, **kwargs) -> requests.Response:
        logger.debug('>>>>> %s %s\n%s', method, path, json.dumps(kwargs, indent=4))
        res = self._session.request(
            method=method,
            url=urljoin(self.uri, path),
            headers={
                'content-type': 'application/json',
                'user-agent': 'PyTezos'
            },
            **kwargs
        )
        if res.status_code == 404:
            logger.debug('<<<<< %s\n%s', res.status_code, res.text)
            raise RpcError(f'Not found: {path}')
        elif res.status_code != 200:
            logger.debug('<<<<< %s\n%s', res.status_code, pformat(res.text, indent=4))
>           raise RpcError.from_response(res)
E           pytezos.rpc.node.RpcError: ({'id': 'failure',
E             'kind': 'temporary',
E             'msg': 'Error while applying operation '
E                    'ooLuJ5vhAiNPnaNHrr66ogVcSKBeL7ParuMTXFYkZe9pqUjx4hC:\n'
E                    'branch refused (Error:\n'
E                    '                  Counter 509 already used for contract '
E                    'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb (expected 510)\n'
E                    ')'},)

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/rpc/node.py:114: RpcError

During handling of the above exception, another exception occurred:

request = <FixtureRequest for <Function test_user_is_imported_from_folder[rimk-tz1PMqV7qGgWMNH2HR9inWjSvf3NwtHg7Xg4]>>

    def fill(request):
        item = request._pyfuncitem
        fixturenames = getattr(item, "fixturenames", None)
        if fixturenames is None:
            fixturenames = request.fixturenames
    
        if hasattr(item, 'callspec'):
            for param, val in sorted_by_dependency(item.callspec.params, fixturenames):
                if val is not None and is_lazy_fixture(val):
                    item.callspec.params[param] = request.getfixturevalue(val.name)
                elif param not in item.funcargs:
>                   item.funcargs[param] = request.getfixturevalue(param)

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytest_lazyfixture.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:191: in gen_cleared_markets
    submit_transaction(bulk_transactions, error_func=print_error)
src/utils.py:79: in submit_transaction
    err_message = ast.literal_eval(str(r)[1-2])
/usr/lib/python3.9/ast.py:62: in literal_eval
    node_or_string = parse(node_or_string, mode='eval')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = ')', filename = '<unknown>', mode = 'eval'

    def parse(source, filename='<unknown>', mode='exec', *,
              type_comments=False, feature_version=None):
        """
        Parse the source into an AST node.
        Equivalent to compile(source, filename, mode, PyCF_ONLY_AST).
        Pass type_comments=True to get back type comments where the syntax allows.
        """
        flags = PyCF_ONLY_AST
        if type_comments:
            flags |= PyCF_TYPE_COMMENTS
        if isinstance(feature_version, tuple):
            major, minor = feature_version  # Should be a 2-tuple.
            assert major == 3
            feature_version = minor
        elif feature_version is None:
            feature_version = -1
        # Else it should be an int giving the minor version for 3.x.
>       return compile(source, filename, mode, flags,
                       _feature_version=feature_version)
E         File "<unknown>", line 1
E           )
E           ^
E       SyntaxError: unmatched ')'

/usr/lib/python3.9/ast.py:50: SyntaxError
---------------------------- Captured stdout setup -----------------------------
deploying binary market
Creation of the directory ./compiled_contracts failed
Wait 0 seconds until block BMeYmbmZQMM4a1K8rDVnvE1JDa75KRJAFh2WTaNQsrD7DFCyiwr is finalized
Wait 2 seconds until block BLX4HW8MFXckcJEkCkZtWyQTMfYegxhPLD66EkUrfwMCcEpNbKz is finalized
0
compiled_contracts/market_enter_exit_endpoint.mligo was generated
Wait 0 seconds until block BLX4HW8MFXckcJEkCkZtWyQTMfYegxhPLD66EkUrfwMCcEpNbKz is finalized
compiled_contracts/market_enter_exit_endpoint.mligo lambda was deployed
compiled_contracts/market_resolve_endpoint.mligo was generated
Wait 0 seconds until block BLa5oU5vBdgDkZwer2SyVqxA1PtR42yc3T6qLRRuAhC2YUUGrTM is finalized
compiled_contracts/market_resolve_endpoint.mligo lambda was deployed
compiled_contracts/swap_move_lqt_endpoint.mligo was generated
Wait 0 seconds until block BLGDKCCiyT87mV12rC8Z3sWDbo7Bz4qtcrio3XRu3e3HUfzP33z is finalized
compiled_contracts/swap_move_lqt_endpoint.mligo lambda was deployed
compiled_contracts/auction_withdraw_endpoint.mligo was generated
Wait 1 seconds until block BMUeAhHUi7hDbQ4zkNfgBw3AcjPzNG4XdFpx86FLAM9iPexRrxZ is finalized
compiled_contracts/auction_withdraw_endpoint.mligo lambda was deployed
compiled_contracts/auction_bet_endpoint.mligo was generated
Wait 0 seconds until block BKoeeSkENmRmwFGdMzRi2BJmhc5wpNdouXoKCHMKj97G6msV9rK is finalized
compiled_contracts/auction_bet_endpoint.mligo lambda was deployed
compiled_contracts/auction_clear_endpoint.mligo was generated
Wait 0 seconds until block BKnuu9ao77u7tGFPgfxtAA4RGZfYjHKeUKZL54BBiccF9XYYxQA is finalized
compiled_contracts/auction_clear_endpoint.mligo lambda was deployed
compiled_contracts/swap_swap_tokens_endpoint.mligo was generated
Wait 1 seconds until block BMEYv1VuQojNuauYMtbvgpYRzEQMxbzVdMWGJudezbciL4AAH4j is finalized
compiled_contracts/swap_swap_tokens_endpoint.mligo lambda was deployed
compiled_contracts/market_create_endpoint.mligo was generated
Wait 0 seconds until block BMAQPMT6KChMMPSygcudMXHE5Azs7eEiJU1iiaeq93gM3cAFDRS is finalized
compiled_contracts/market_create_endpoint.mligo lambda was deployed
compiled_contracts/market_claim_endpoint.mligo was generated
Wait 0 seconds until block BLjYRPdFL7idfrv55i22R44s8moPMXmYmggPdt8eSDkZtyEmScu is finalized
compiled_contracts/market_claim_endpoint.mligo lambda was deployed
Wait 1 seconds until block BMGCUFwKU3nwLsjMnEPtuvn9wUmNqHX3z4Q3LBePu67tAw69vSN is finalized
Binary market was deployed at KT1Gszir1ynLeMqD9ckLuzDZm1uDuP3B7DmC
Wait 1 seconds until block BLC6qoPHyNuiTGytXsixgc45QG6RPncWCsGCxhhzfY9KtxBDG83 is finalized
Wait 2 seconds until block BMaFvYP4h7MaavsUs7qMFUjFiM1nmXDKG9bWPbQA7iQawf1G56y is finalized
0
stablecoin was deployed at KT19utveK7hoK1vCqikZ2bc9A825QPx6vKGr
Wait 0 seconds until block BLwjBxuqiTjGVWVCjqZNywMgSfS88MPvP2n7yjUxLaMAvrCKDNC is finalized
Wait 0 seconds until block BL96vA8J9Kwx1wsJQb1fhB5fxqVS89Jmiss7d2RtrCAQsrx3M46 is finalized
Wait 1 seconds until block BKjyJSEcR8BN138TuSAckrMGhhNMBuwmiGnh2hiztt37j1BsC8y is finalized
Wait 1 seconds until block BM5ptWeenQcJ4B9npMJFczYx7UneDvv1gcYGfKGM8DunazocGoT is finalized
Wait 0 seconds until block BLUfCDm7EZDCjQVX135Re36cFPAEgoxEgyqwnhqQ1XhUQjVZKGo is finalized
Wait 1 seconds until block BKsgdao7Gyp9C3HsPddsax5XY8hTVbFoAn4drujNvxJ7HfzDHfm is finalized
generating markets
Wait 0 seconds until block BM15WKXjwKZcsonDpoMq69r4z5eHkWotK1QL9rzUp2VCQYDS6y5 is finalized
Wait 0 seconds until block BLJP3WgQZmQjJcgimFmnG6ZGBCvD1H2nqrkbCF6LEUJKKYJbkCk is finalized
Wait 0 seconds until block BLL5oxgpx63yYjdbGWPavmuw6hHAUYFRrsPjXrEBVwgYXiT9PqR is finalized
Wait 0 seconds until block BLnw2YyPXFLUo3HMYGgt8M8Ehy15C9tPa5QVP6cuXmNdQhWiYMW is finalized
markets generated
Wait 0 seconds until block BLPxfndsS87mRsNBsdz6Gi85k2jphLNDeJvkSRK9o7zc7dGvieP is finalized
Wait 0 seconds until block BL8jrTFJifKsd2Vs657imDTKpQQoHHwR9LaBfcihZyJixPxbBJS is finalized
Wait 1 seconds until block BKiq5KR1rB9VNtvaDV2gciQiow1yDB7vj6E6yUFBkVNPj8y9aFE is finalized
Wait 0 seconds until block BMdbyz3PEesJ3bRhyVCRteGhEXmhsqFSFbQbwuPiBe1imyM7QmS is finalized
Wait 0 seconds until block BLQ7UdoUptfLBFt7EpBjZZUcVR5WkDLTCBP9q6nHTmN1aG3c9Eh is finalized
Wait 0 seconds until block BMQSt4zbXmJAmqK2uecnkND4LtaJMhLar4HXoBcMRa2kVST3nNV is finalized
Wait 0 seconds until block BLh28y58BhjWQ8qvv1us4YSBwNminDccrETChuqQjoExM9HovjW is finalized
Wait 0 seconds until block BLc7t5KZrwLBzcouioUsVdmUaTw4M4YBjoL6t5AE7D6HFf1ttp2 is finalized
Wait 0 seconds until block BLMiDKWhiHQbLTrZGPVy1xgfuTPSCZBXNDQGuNeJae8sxVZ9wdK is finalized
Wait 0 seconds until block BLJZvYoNuXAFZS8QRW1ddap5Gngr7R81iVkdADgU5A1BZFcgzoe is finalized
Wait 0 seconds until block BLctk8Y4HUT2w8vJNqrCdnLTPGZPtNpXbrCm5CYZSGxAQGnDRE4 is finalized
Wait 0 seconds until block BLNHNNu5e3DFkoibGthAXWGkn8eJDLqEfHUdSn8GwKeboqxU3fP is finalized
Wait 0 seconds until block BKntkDMKgtNeSDfFwwtTDVmdemkoTTLz1T4aENCEwnvxVQPk2qF is finalized
Wait 0 seconds until block BLKPAxyKdCLgetq9BLLe5PrbeCBRYbZXQnBNHyRKJoa713CxTMW is finalized
Wait 0 seconds until block BMWmwu6R1pxYXpDkhLXBw5pi1MKXNXcPHc4Uw1ATvtpwcChUB4R is finalized
Wait 0 seconds until block BMb76yxREeJK6zmCetSKr7RXcbYYmTtqVdjWh5SPKCtdkWc2eJy is finalized
Wait 0 seconds until block BM3kb4W2PnET7tkYxrZRhaRriK2z5a6GLnRBhhrij5XqhNawygb is finalized
Wait 0 seconds until block BLrFrjPmy13TpBjSSm4AD8LQ8mGT2D5nsqYiJeVdryQMKiG8SFz is finalized
Wait 0 seconds until block BMP1qKVhWJ2woJf3YHoEgQ3FJc4VrgsfC6ESeEgZmiBKe4WWZRF is finalized
Wait 0 seconds until block BLYYTcSmcDBQcxk7wwRP7dq37A758w1XMcsJ3gjViAzBDoNY9Y6 is finalized
Wait 0 seconds until block BMXcSBPXmbiHLof8iFRYUXawRKyqEhYoSfZccDNVk5jUmoSeXV6 is finalized
Wait 0 seconds until block BMbnnz4TuvYVASbVuMA7HNp9Fdvi9Mos3MVQKE7SpV8CZtpFdhR is finalized
Wait 0 seconds until block BLMvgAD8XuRCBVHo1kBBCYJAa8LzhYogDinMSs3VhtGTxRTJPxD is finalized
Wait 0 seconds until block BLsopRJ8wKaLMNZPQGL3kUmu5SinEQdGnAC7FEadhmMMaKFtMRv is finalized
Wait 0 seconds until block BLH6C6vBWYxx4hJJ2QNhu1hKjvGazEPFnBLZV9Mfvawyb52pAgL is finalized
Wait 0 seconds until block BKnmwsrd1AaxPDxJvhzwiqqw6MtQ3RDX81T548LiZL7KvgQkAxm is finalized
Wait 0 seconds until block BLQY4qD9n5JMkhaMjocSTxCSozapTpkVzMtzhqVJGHKHizJv9dy is finalized
Wait 0 seconds until block BMBn1w9VhKt6Lfv44pJbBQA4PTQxpdgzQyfHiZvhzPS38vDe2vv is finalized
Wait 1 seconds until block BMQzbgK1d6yAWWLwmSoMATdsYmDmdzSEbZEszAsjStGGBd9bNuy is finalized
Wait 0 seconds until block BLR51QK1FZEwL4gRDB7HCPmygFcgd2EiKJBjQPHU4eSCBkmPdrW is finalized
Wait 0 seconds until block BLMzeYkUK4inB1qcR8n5sSdXJw9TtQk77WReAzwzMFb89xK3QsG is finalized
Wait 1 seconds until block BKyT9vzQvmUnd9LJAYx2KUcUfkpr96knzhQziF2y7JaAdZUeirE is finalized
Wait 0 seconds until block BKvqAuHvGjcZdUwZNqffTvCfr7kL7jGwU3JUtFWpmZpRDvnPdXW is finalized
Wait 0 seconds until block BLxVvYU72HNhsidjGm5kBZpFD7mUfS88PsqjwgouwQdnQs47A39 is finalized
Wait 0 seconds until block BLbgkCdBi86KVdp4QsaRg1bp83nAEA8LAQxUpSTiHbFk2WT1tGh is finalized
Wait 0 seconds until block BLAQDnVzQ3kHiGqPV3bZ3sncbFjwMJD3v6D8AHpXmrAW3tBFP7a is finalized
Wait 1 seconds until block BKs66Ey7WkRE6ZwJc1n4XX4XQwJRGSki2FB6W6b49bnufwJpWNY is finalized
Wait 0 seconds until block BMQdGF3YLDoZmmUXk7gGSdn3avLfE6Kn1usqS5rDrDZCogwPp2E is finalized
Wait 0 seconds until block BLoWKhmccGgtTYC7a2jkT4ETj4hMPML7on31vtTVSZ5BrGG1e9j is finalized
Wait 0 seconds until block BLe5Yxz8idZVYsADeb5mMeNSwNsi67HNpMhe88iSm4MjtYDrGuC is finalized
Wait 1 seconds until block BLY9JnFZpbAhvoi2zLdjnTUTtQv626iNmrnagnatzFo6ZjH3r5K is finalized
Wait 0 seconds until block BLJPpiFSwYKQzyyWjosrmaTfAK6KchbigMn8FLWi2KBMiKsWrGh is finalized
Wait 0 seconds until block BM8dR7gjNYkNRHZSSW2Vnf53wnLjtHX56C9KphLRQkFFGF7TKCR is finalized
Wait 0 seconds until block BLScWboTVEsLkyWTmpLDL5McLB8tTxKxNprnrcuoGteWF5Epghw is finalized
Wait 0 seconds until block BLVXHG1hpHtv8UKh2Cc1w8MBe2RdkEx35Jj2i8tuAiGFiYu7HXw is finalized
Wait 0 seconds until block BMXFrRdq1RXMhKvDMpp5sZj6mwbJfrMusk97nC3EGt6CsFs7Lsx is finalized
Wait 0 seconds until block BM5phhfQREmwY7XFiLW432M1Xnwdsh7bne8GUFPwKExjBef8GPH is finalized
Wait 0 seconds until block BLRhWadgzdkq7Mwrkny79RkfViPqPwh1gVhDxsukNtiyh4EMRCi is finalized
Wait 0 seconds until block BM1e1UsnPp8LgWUnzdFendqYurJ3GPHcrDa5PkDV5YW9TiwQw46 is finalized
Wait 0 seconds until block BMbLhtQYD9YdyhT59WAwR59wBmnbpA9hajDw7krtJF9iRD4agpL is finalized
Wait 1 seconds until block BLE1fLVgzHCTcQWHg1D2xBWQRvD6g6P9sby4cY9Wzq3vthfDzNo is finalized
Wait 0 seconds until block BLZoDkhtdUGhf3z2r65VLknvSiompbfNrFU61EJtfTQigm9vbNK is finalized
Wait 0 seconds until block BLsezUAhrFh8z45Y74Hp1jae5MSJqFCB6kjyhyWiSqjM2c36MfX is finalized
Wait 0 seconds until block BL4VW19yu91gsPnknLKuay7zAza9skhHQ9msDH2nyydtCk6s4by is finalized
Wait 0 seconds until block BKjGNf7Cczan1nQYcPSHU8zbNjnXf59BQU6sn1ijQ2A5fZvTe3T is finalized
Wait 0 seconds until block BLRCoATtwaaBqaMXpT8VryCeSzQ4ypJ2XmRoj8SBoBxuC1BBPtz is finalized
Wait 0 seconds until block BM3vzzuVE2YL8A1BadCBDctj4de63YBG6NMnM8rmHGHLtFfv2kQ is finalized
Wait 0 seconds until block BLnPrSEU75BAwouUoL29NcE2LX8Hz76xdX3E56y27C1rnX2yMMi is finalized
Wait 0 seconds until block BLvJYRR2WTWTHLqi63AXkpLyDwjMNx1vUUFTLWy3nCjwMJehgbF is finalized
Wait 0 seconds until block BL46xJTAq99sSrHmzNELuEUvgFJ1ge3aGuULwS1hwFaPmURNTMr is finalized
Wait 0 seconds until block BLdBjdRdJCDMoRbN45xLr8xy7veXoo9P7h7HmD7uGhtF8Skpcrn is finalized
Wait 0 seconds until block BKst69XAKZY4eoWgJHacwXWo1iyZyaEZBa8iQkNmKdUmroLXwpU is finalized
------------------------------ Captured log setup ------------------------------
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMeYmbmZQMM4a1K8rDVnvE1JDa75KRJAFh2WTaNQsrD7DFCyiwr is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLX4HW8MFXckcJEkCkZtWyQTMfYegxhPLD66EkUrfwMCcEpNbKz is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLa5oU5vBdgDkZwer2SyVqxA1PtR42yc3T6qLRRuAhC2YUUGrTM is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLGDKCCiyT87mV12rC8Z3sWDbo7Bz4qtcrio3XRu3e3HUfzP33z is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BMUeAhHUi7hDbQ4zkNfgBw3AcjPzNG4XdFpx86FLAM9iPexRrxZ is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BKoeeSkENmRmwFGdMzRi2BJmhc5wpNdouXoKCHMKj97G6msV9rK is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BKnuu9ao77u7tGFPgfxtAA4RGZfYjHKeUKZL54BBiccF9XYYxQA is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BMEYv1VuQojNuauYMtbvgpYRzEQMxbzVdMWGJudezbciL4AAH4j is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMAQPMT6KChMMPSygcudMXHE5Azs7eEiJU1iiaeq93gM3cAFDRS is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLjYRPdFL7idfrv55i22R44s8moPMXmYmggPdt8eSDkZtyEmScu is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BMGCUFwKU3nwLsjMnEPtuvn9wUmNqHX3z4Q3LBePu67tAw69vSN is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BLC6qoPHyNuiTGytXsixgc45QG6RPncWCsGCxhhzfY9KtxBDG83 is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLwjBxuqiTjGVWVCjqZNywMgSfS88MPvP2n7yjUxLaMAvrCKDNC is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BL96vA8J9Kwx1wsJQb1fhB5fxqVS89Jmiss7d2RtrCAQsrx3M46 is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BKjyJSEcR8BN138TuSAckrMGhhNMBuwmiGnh2hiztt37j1BsC8y is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BM5ptWeenQcJ4B9npMJFczYx7UneDvv1gcYGfKGM8DunazocGoT is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLUfCDm7EZDCjQVX135Re36cFPAEgoxEgyqwnhqQ1XhUQjVZKGo is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BKsgdao7Gyp9C3HsPddsax5XY8hTVbFoAn4drujNvxJ7HfzDHfm is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BM15WKXjwKZcsonDpoMq69r4z5eHkWotK1QL9rzUp2VCQYDS6y5 is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLJP3WgQZmQjJcgimFmnG6ZGBCvD1H2nqrkbCF6LEUJKKYJbkCk is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLL5oxgpx63yYjdbGWPavmuw6hHAUYFRrsPjXrEBVwgYXiT9PqR is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLnw2YyPXFLUo3HMYGgt8M8Ehy15C9tPa5QVP6cuXmNdQhWiYMW is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLPxfndsS87mRsNBsdz6Gi85k2jphLNDeJvkSRK9o7zc7dGvieP is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BL8jrTFJifKsd2Vs657imDTKpQQoHHwR9LaBfcihZyJixPxbBJS is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BKiq5KR1rB9VNtvaDV2gciQiow1yDB7vj6E6yUFBkVNPj8y9aFE is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMdbyz3PEesJ3bRhyVCRteGhEXmhsqFSFbQbwuPiBe1imyM7QmS is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLQ7UdoUptfLBFt7EpBjZZUcVR5WkDLTCBP9q6nHTmN1aG3c9Eh is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMQSt4zbXmJAmqK2uecnkND4LtaJMhLar4HXoBcMRa2kVST3nNV is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLh28y58BhjWQ8qvv1us4YSBwNminDccrETChuqQjoExM9HovjW is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLc7t5KZrwLBzcouioUsVdmUaTw4M4YBjoL6t5AE7D6HFf1ttp2 is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLMiDKWhiHQbLTrZGPVy1xgfuTPSCZBXNDQGuNeJae8sxVZ9wdK is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLJZvYoNuXAFZS8QRW1ddap5Gngr7R81iVkdADgU5A1BZFcgzoe is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLctk8Y4HUT2w8vJNqrCdnLTPGZPtNpXbrCm5CYZSGxAQGnDRE4 is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLNHNNu5e3DFkoibGthAXWGkn8eJDLqEfHUdSn8GwKeboqxU3fP is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BKntkDMKgtNeSDfFwwtTDVmdemkoTTLz1T4aENCEwnvxVQPk2qF is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLKPAxyKdCLgetq9BLLe5PrbeCBRYbZXQnBNHyRKJoa713CxTMW is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMWmwu6R1pxYXpDkhLXBw5pi1MKXNXcPHc4Uw1ATvtpwcChUB4R is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMb76yxREeJK6zmCetSKr7RXcbYYmTtqVdjWh5SPKCtdkWc2eJy is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BM3kb4W2PnET7tkYxrZRhaRriK2z5a6GLnRBhhrij5XqhNawygb is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLrFrjPmy13TpBjSSm4AD8LQ8mGT2D5nsqYiJeVdryQMKiG8SFz is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMP1qKVhWJ2woJf3YHoEgQ3FJc4VrgsfC6ESeEgZmiBKe4WWZRF is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLYYTcSmcDBQcxk7wwRP7dq37A758w1XMcsJ3gjViAzBDoNY9Y6 is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMXcSBPXmbiHLof8iFRYUXawRKyqEhYoSfZccDNVk5jUmoSeXV6 is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMbnnz4TuvYVASbVuMA7HNp9Fdvi9Mos3MVQKE7SpV8CZtpFdhR is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLMvgAD8XuRCBVHo1kBBCYJAa8LzhYogDinMSs3VhtGTxRTJPxD is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLsopRJ8wKaLMNZPQGL3kUmu5SinEQdGnAC7FEadhmMMaKFtMRv is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLH6C6vBWYxx4hJJ2QNhu1hKjvGazEPFnBLZV9Mfvawyb52pAgL is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BKnmwsrd1AaxPDxJvhzwiqqw6MtQ3RDX81T548LiZL7KvgQkAxm is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLQY4qD9n5JMkhaMjocSTxCSozapTpkVzMtzhqVJGHKHizJv9dy is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMBn1w9VhKt6Lfv44pJbBQA4PTQxpdgzQyfHiZvhzPS38vDe2vv is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BMQzbgK1d6yAWWLwmSoMATdsYmDmdzSEbZEszAsjStGGBd9bNuy is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLR51QK1FZEwL4gRDB7HCPmygFcgd2EiKJBjQPHU4eSCBkmPdrW is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLMzeYkUK4inB1qcR8n5sSdXJw9TtQk77WReAzwzMFb89xK3QsG is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BKyT9vzQvmUnd9LJAYx2KUcUfkpr96knzhQziF2y7JaAdZUeirE is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BKvqAuHvGjcZdUwZNqffTvCfr7kL7jGwU3JUtFWpmZpRDvnPdXW is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLxVvYU72HNhsidjGm5kBZpFD7mUfS88PsqjwgouwQdnQs47A39 is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLbgkCdBi86KVdp4QsaRg1bp83nAEA8LAQxUpSTiHbFk2WT1tGh is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLAQDnVzQ3kHiGqPV3bZ3sncbFjwMJD3v6D8AHpXmrAW3tBFP7a is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BKs66Ey7WkRE6ZwJc1n4XX4XQwJRGSki2FB6W6b49bnufwJpWNY is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMQdGF3YLDoZmmUXk7gGSdn3avLfE6Kn1usqS5rDrDZCogwPp2E is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLoWKhmccGgtTYC7a2jkT4ETj4hMPML7on31vtTVSZ5BrGG1e9j is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLe5Yxz8idZVYsADeb5mMeNSwNsi67HNpMhe88iSm4MjtYDrGuC is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BLY9JnFZpbAhvoi2zLdjnTUTtQv626iNmrnagnatzFo6ZjH3r5K is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLJPpiFSwYKQzyyWjosrmaTfAK6KchbigMn8FLWi2KBMiKsWrGh is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BM8dR7gjNYkNRHZSSW2Vnf53wnLjtHX56C9KphLRQkFFGF7TKCR is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLScWboTVEsLkyWTmpLDL5McLB8tTxKxNprnrcuoGteWF5Epghw is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLVXHG1hpHtv8UKh2Cc1w8MBe2RdkEx35Jj2i8tuAiGFiYu7HXw is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMXFrRdq1RXMhKvDMpp5sZj6mwbJfrMusk97nC3EGt6CsFs7Lsx is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BM5phhfQREmwY7XFiLW432M1Xnwdsh7bne8GUFPwKExjBef8GPH is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLRhWadgzdkq7Mwrkny79RkfViPqPwh1gVhDxsukNtiyh4EMRCi is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BM1e1UsnPp8LgWUnzdFendqYurJ3GPHcrDa5PkDV5YW9TiwQw46 is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BMbLhtQYD9YdyhT59WAwR59wBmnbpA9hajDw7krtJF9iRD4agpL is finalized
INFO     pytezos:shell.py:100 Wait 1 seconds until block BLE1fLVgzHCTcQWHg1D2xBWQRvD6g6P9sby4cY9Wzq3vthfDzNo is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLZoDkhtdUGhf3z2r65VLknvSiompbfNrFU61EJtfTQigm9vbNK is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLsezUAhrFh8z45Y74Hp1jae5MSJqFCB6kjyhyWiSqjM2c36MfX is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BL4VW19yu91gsPnknLKuay7zAza9skhHQ9msDH2nyydtCk6s4by is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BKjGNf7Cczan1nQYcPSHU8zbNjnXf59BQU6sn1ijQ2A5fZvTe3T is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLRCoATtwaaBqaMXpT8VryCeSzQ4ypJ2XmRoj8SBoBxuC1BBPtz is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BM3vzzuVE2YL8A1BadCBDctj4de63YBG6NMnM8rmHGHLtFfv2kQ is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLnPrSEU75BAwouUoL29NcE2LX8Hz76xdX3E56y27C1rnX2yMMi is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLvJYRR2WTWTHLqi63AXkpLyDwjMNx1vUUFTLWy3nCjwMJehgbF is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BL46xJTAq99sSrHmzNELuEUvgFJ1ge3aGuULwS1hwFaPmURNTMr is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BLdBjdRdJCDMoRbN45xLr8xy7veXoo9P7h7HmD7uGhtF8Skpcrn is finalized
INFO     pytezos:shell.py:100 Wait 0 seconds until block BKst69XAKZY4eoWgJHacwXWo1iyZyaEZBa8iQkNmKdUmroLXwpU is finalized
_ ERROR at setup of test_user_is_imported_from_folder[tang-tz1MDwHYDLgPydL5iav7eee9mZhe6gntoLet] _

transaction = <pytezos.operation.group.OperationGroup object at 0x7febb67a8910>

Properties
.key		tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjc...pply()
.proposals()
.result()
.reveal()
.run()
.run_operation()
.seed_nonce_revelation()
.send()
.sign()
.transaction()
count = None, tries = 3, error_func = <function print_error at 0x7febb7170670>

    def submit_transaction(transaction, count=None, tries=3, error_func=None):
        """
        Submit a transaction
        """
        try:
            source = transaction.key.public_key_hash()
            transaction_ = transaction.autofill(ttl=56)
>           res = transaction_.sign().inject()

src/utils.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.operation.group.OperationGroup object at 0x7febb64a0880>

Properties
.key		tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjc...pply()
.proposals()
.result()
.reveal()
.run()
.run_operation()
.seed_nonce_revelation()
.send()
.sign()
.transaction()
check_result = True, num_blocks_wait = 5, time_between_blocks = None
min_confirmations = 0, kwargs = {}

    def inject(
        self,
        check_result: bool = True,
        num_blocks_wait: int = 5,
        time_between_blocks: Optional[int] = None,
        min_confirmations: int = 0,
        **kwargs
    ):
        """Inject the signed operation group.
    
        :param check_result: raise RpcError in case operation is applied but has runtime errors
        :param num_blocks_wait: number of blocks to wait for injection
        :param time_between_blocks: override the corresponding parameter from constants
        :param min_confirmations: number of block injections to wait for before returning
        :returns: operation group with metadata (raw RPC response)
        """
        self.context.reset()
    
>       opg_hash = self.shell.injection.operation.post(
            operation=self.binary_payload(),
            _async=False,
        )

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/operation/group.py:348: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.rpc.shell.OperationInjectionQuery object at 0x7febb64bb760>

Properties
.path	/injection/operation
.node	http...wering,set True if you don't want to.
:param chain: Optionally you can specify the chain
:returns: ID of the operation

operation = '2d018b48faba617ffb950f0eac7f96f7945e5234db041e630382714d4422da2a6c006b82198cb179e8306c1bedd08f12dc863f328886a428f803a...b0b47a7931321736623ed7d6a5fd96829e96761f06f3c04f91e84307086404866a66c4e08b257804096e4b3788a2d0c73430646c912c0e21464c0d'
_async = False, chain = None

    def post(self, operation, _async=False, chain=None):
        """ Inject an operation in node and broadcast it.
        The `signedOperationContents` should be constructed using a contextual RPCs from the latest block
        and signed by the client.
    
        :param operation: Hex-encoded operation data or bytes
        :param _async: By default, the RPC will wait for the operation to be (pre-)validated before answering, \
        set True if you don't want to.
        :param chain: Optionally you can specify the chain
        :returns: ID of the operation
        """
        if isinstance(operation, bytes):
            operation = operation.hex()
    
>       return self._post(
            params={
                'async': _async,
                'chain': chain
            },
            json=operation
        )

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/rpc/shell.py:276: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.rpc.shell.OperationInjectionQuery object at 0x7febb64bb760>

Properties
.path	/injection/operation
.node	http...wering,set True if you don't want to.
:param chain: Optionally you can specify the chain
:returns: ID of the operation

json = '2d018b48faba617ffb950f0eac7f96f7945e5234db041e630382714d4422da2a6c006b82198cb179e8306c1bedd08f12dc863f328886a428f803a...b0b47a7931321736623ed7d6a5fd96829e96761f06f3c04f91e84307086404866a66c4e08b257804096e4b3788a2d0c73430646c912c0e21464c0d'
params = {'async': False, 'chain': None}

    def _post(self, json=None, params=None):
>       return self.node.post(
            path=self.path,
            params=params,
            json=json
        )

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/rpc/query.py:132: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.rpc.node.RpcNode object at 0x7febb69a9c10>

Node address
http://localhost:20000
path = '/injection/operation', params = {'async': False, 'chain': None}
json = '2d018b48faba617ffb950f0eac7f96f7945e5234db041e630382714d4422da2a6c006b82198cb179e8306c1bedd08f12dc863f328886a428f803a...b0b47a7931321736623ed7d6a5fd96829e96761f06f3c04f91e84307086404866a66c4e08b257804096e4b3788a2d0c73430646c912c0e21464c0d'

    def post(self, path, params=None, json=None):
>       response = self.request('POST', path, params=params, json=json)

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/rpc/node.py:124: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <pytezos.rpc.node.RpcNode object at 0x7febb69a9c10>

Node address
http://localhost:20000
method = 'POST', path = '/injection/operation'
kwargs = {'json': '2d018b48faba617ffb950f0eac7f96f7945e5234db041e630382714d4422da2a6c006b82198cb179e8306c1bedd08f12dc863f328886...c04f91e84307086404866a66c4e08b257804096e4b3788a2d0c73430646c912c0e21464c0d', 'params': {'async': False, 'chain': None}}
res = <Response [500]>

    def request(self, method, path, **kwargs) -> requests.Response:
        logger.debug('>>>>> %s %s\n%s', method, path, json.dumps(kwargs, indent=4))
        res = self._session.request(
            method=method,
            url=urljoin(self.uri, path),
            headers={
                'content-type': 'application/json',
                'user-agent': 'PyTezos'
            },
            **kwargs
        )
        if res.status_code == 404:
            logger.debug('<<<<< %s\n%s', res.status_code, res.text)
            raise RpcError(f'Not found: {path}')
        elif res.status_code != 200:
            logger.debug('<<<<< %s\n%s', res.status_code, pformat(res.text, indent=4))
>           raise RpcError.from_response(res)
E           pytezos.rpc.node.RpcError: ({'id': 'failure',
E             'kind': 'temporary',
E             'msg': 'Error while applying operation '
E                    'ooLuJ5vhAiNPnaNHrr66ogVcSKBeL7ParuMTXFYkZe9pqUjx4hC:\n'
E                    'branch refused (Error:\n'
E                    '                  Counter 509 already used for contract '
E                    'tz1VSUr8wwNhLAzempoch5d6hLRiTh8Cjcjb (expected 510)\n'
E                    ')'},)

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytezos/rpc/node.py:114: RpcError

During handling of the above exception, another exception occurred:

request = <FixtureRequest for <Function test_user_is_imported_from_folder[tang-tz1MDwHYDLgPydL5iav7eee9mZhe6gntoLet]>>

    def fill(request):
        item = request._pyfuncitem
        fixturenames = getattr(item, "fixturenames", None)
        if fixturenames is None:
            fixturenames = request.fixturenames
    
        if hasattr(item, 'callspec'):
            for param, val in sorted_by_dependency(item.callspec.params, fixturenames):
                if val is not None and is_lazy_fixture(val):
                    item.callspec.params[param] = request.getfixturevalue(val.name)
                elif param not in item.funcargs:
>                   item.funcargs[param] = request.getfixturevalue(param)

/home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/pytest_lazyfixture.py:37: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:191: in gen_cleared_markets
    submit_transaction(bulk_transactions, error_func=print_error)
src/utils.py:79: in submit_transaction
    err_message = ast.literal_eval(str(r)[1-2])
/usr/lib/python3.9/ast.py:62: in literal_eval
    node_or_string = parse(node_or_string, mode='eval')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

source = ')', filename = '<unknown>', mode = 'eval'

    def parse(source, filename='<unknown>', mode='exec', *,
              type_comments=False, feature_version=None):
        """
        Parse the source into an AST node.
        Equivalent to compile(source, filename, mode, PyCF_ONLY_AST).
        Pass type_comments=True to get back type comments where the syntax allows.
        """
        flags = PyCF_ONLY_AST
        if type_comments:
            flags |= PyCF_TYPE_COMMENTS
        if isinstance(feature_version, tuple):
            major, minor = feature_version  # Should be a 2-tuple.
            assert major == 3
            feature_version = minor
        elif feature_version is None:
            feature_version = -1
        # Else it should be an int giving the minor version for 3.x.
>       return compile(source, filename, mode, flags,
                       _feature_version=feature_version)
E         File "<unknown>", line 1
E           )
E           ^
E       SyntaxError: unmatched ')'

/usr/lib/python3.9/ast.py:50: SyntaxError
=============================== warnings summary ===============================
../../../../../.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/cytoolz/compatibility.py:2
  /home/killua/.cache/pypoetry/virtualenvs/prediction-market-support-mREyC6rD-py3.9/lib/python3.9/site-packages/cytoolz/compatibility.py:2: DeprecationWarning: The toolz.compatibility module is no longer needed in Python 3 and has been deprecated. Please import these utilities directly from the standard library. This module will be removed in a future release.
    warnings.warn("The toolz.compatibility module is no longer "

-- Docs: https://docs.pytest.org/en/stable/warnings.html
=========================== short test summary info ============================
ERROR tests/test_account.py::test_user_is_imported_from_folder[rimk-tz1PMqV7qGgWMNH2HR9inWjSvf3NwtHg7Xg4]
ERROR tests/test_account.py::test_user_is_imported_from_folder[tang-tz1MDwHYDLgPydL5iav7eee9mZhe6gntoLet]
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
/usr/lib/python3.9/ast.py:378: KeyboardInterrupt
(to show a full traceback on KeyboardInterrupt use --full-trace)
=================== 1 warning, 2 errors in 398.39s (0:06:38) ===================
